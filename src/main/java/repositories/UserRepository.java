package repos;

import java.sql.Connection;
import java.sql.SQLException;

import domain.Entity;
import domain.User;
import mappers.IMapResultSetToEntity;
import unitofwork.IUnitOfWork;

public class UserRepository extends RepositoryBase<User> {

	public UserRepository(Connection conection, IMapResultSetToEntity<User> mapper, IUnitOfWork uow) {
		super(conection, mapper, uow);
	}

	public void persistAdd(Entity entity) {
		try {
			setUpInsert((Entity)entity);
			insert.executeUpdate();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
	}

	@Override
	protected String getTableName() {
		return "t_sys_users";
	}

	@Override
	protected String getCreateTableQuery() {
		return "CREATE TABLE t_sys_users ("
         		+ "id INT GENERATED BY DEFAULT AS IDENTITY, "
         		+ "login VARCHAR(255) NOT NULL, "
         		+ "password VARCHAR(255) NOT NULL, "
         		+ "PRIMARY KEY (id));";
	}

	@Override
	protected String getInsertQuery() {
		return "INSERT INTO T_SYS_USERS ( ID, LOGIN, PASSWORD ) VALUES ( ?, ?, ?)";
	}

	@Override
	protected String getUpdateQuery() {
		return "UPDATE t_sys_users SET (id, login, password)=(?,?,?) WHERE id=?";
	}

	@Override
	protected void setUpInsert(Entity entity) throws SQLException {
		User user = (User)entity;
			insert.setInt(1, user.getId());
			insert.setString(2, user.getLogin());
			insert.setString(3, user.getPassword());
	}

	@Override
	protected void setUpUpdate(Entity entity) throws SQLException {
		User user = (User)entity;
		//update.setInt(0, user.getId());
		update.setString(1, user.getLogin());
		update.setString(2, user.getPassword());
		
	}

}
